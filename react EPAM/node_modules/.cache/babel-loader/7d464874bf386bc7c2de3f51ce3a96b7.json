{"ast":null,"code":"var _jsxFileName = \"/Users/romanheviak/Desktop/react EPAM/react-netflix/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport HomePage from \"./Components/HomePage\";\nimport LoginPage from \"./Components/LoginPage\";\nimport \"../src/Style/App.css\";\nimport axios from \"axios\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport SignInPage from \"./Components/SignInPage\";\nimport SignUpPage from \"./Components/SignUpPage\";\nimport Profile from \"./Components/Profile\";\nimport FilmProfile from \"./Components/FilmProfile\";\nimport { Context } from \"../src/context\";\nimport LikedFilm from \"./Components/LikedFilm\";\nimport requests from \"./Request\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [film, setFilm] = useState([]);\n  const [liked, setLiked] = useState([]);\n  const [movies, setMovies] = useState([]); // const [sortedByGenres, setSortedByGenres] = useState([]);\n  // const [listToShow, setListToShow] = useState([]);\n  // const [search, setSearch] = useState(\"\");\n  // const [query, setQuery] = useState(\"\");\n  // const sorted and filtered data = useMemo(()=>{\n  // return initialState.filter(({name}=> search be search)).filter(({genre})=> genre===sortValue)\n  // }, [initialStart, search, sortValue])\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: {\n        film,\n        setFilm,\n        liked,\n        setLiked,\n        // query,\n        // setQuery,\n        // sortedByGenres,\n        // setSortedByGenres,\n        // listToShow,\n        // setListToShow,\n        movies,\n        setMovies\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/start\",\n          component: LoginPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          component: SignUpPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          component: SignInPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/homepage\",\n          component: HomePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          component: Profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/filmprofile/:id\",\n          component: FilmProfile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/liked\",\n          component: LikedFilm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"6gR8BiTQjJ0w4zbZBsc4s4BsaYU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/romanheviak/Desktop/react EPAM/react-netflix/src/App.js"],"names":["React","useEffect","useState","useMemo","HomePage","LoginPage","axios","BrowserRouter","Route","SignInPage","SignUpPage","Profile","FilmProfile","Context","LikedFilm","requests","App","film","setFilm","liked","setLiked","movies","setMovies"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,OAArC,QAAoD,OAApD;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,sBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,KAAxB,QAAqC,kBAArC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,EAAD,CAApC,CAJa,CAMb;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,sBACE,QAAC,aAAD;AAAA,2BACE,QAAC,OAAD,CAAS,QAAT;AACE,MAAA,KAAK,EACH;AACEe,QAAAA,IADF;AAEEC,QAAAA,OAFF;AAGEC,QAAAA,KAHF;AAIEC,QAAAA,QAJF;AAKE;AACA;AACA;AACA;AACA;AACA;AACAC,QAAAA,MAXF;AAYEC,QAAAA;AAZF,OAFJ;AAAA,6BAkBE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,SAAS,EAAEjB;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,SAAS,EAAEK;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,SAAS,EAAED;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAwB,UAAA,SAAS,EAAEL;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,SAAS,EAAEO;AAAlC;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,kBAAZ;AAA+B,UAAA,SAAS,EAAEC;AAA1C;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,SAAS,EAAEE;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GA/CQE,G;;KAAAA,G;AAiDT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport HomePage from \"./Components/HomePage\";\nimport LoginPage from \"./Components/LoginPage\";\nimport \"../src/Style/App.css\";\nimport axios from \"axios\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport SignInPage from \"./Components/SignInPage\";\nimport SignUpPage from \"./Components/SignUpPage\";\nimport Profile from \"./Components/Profile\";\nimport FilmProfile from \"./Components/FilmProfile\";\nimport { Context } from \"../src/context\";\nimport LikedFilm from \"./Components/LikedFilm\";\nimport requests from \"./Request\";\n\nfunction App() {\n  const [film, setFilm] = useState([]);\n  const [liked, setLiked] = useState([]);\n\n  const [movies, setMovies] = useState([]);\n\n  // const [sortedByGenres, setSortedByGenres] = useState([]);\n  // const [listToShow, setListToShow] = useState([]);\n  // const [search, setSearch] = useState(\"\");\n  // const [query, setQuery] = useState(\"\");\n\n  // const sorted and filtered data = useMemo(()=>{\n  // return initialState.filter(({name}=> search be search)).filter(({genre})=> genre===sortValue)\n  // }, [initialStart, search, sortValue])\n\n  return (\n    <BrowserRouter>\n      <Context.Provider\n        value={\n          {\n            film,\n            setFilm,\n            liked,\n            setLiked,\n            // query,\n            // setQuery,\n            // sortedByGenres,\n            // setSortedByGenres,\n            // listToShow,\n            // setListToShow,\n            movies, \n            setMovies\n          }\n        }\n      >\n        <div className=\"app\">\n          <Route path=\"/start\" component={LoginPage} />\n          <Route path=\"/signup\" component={SignUpPage} />\n          <Route path=\"/login\" component={SignInPage} />\n          <Route path=\"/homepage\" component={HomePage} />\n          <Route path=\"/profile\" component={Profile} />\n          <Route path=\"/filmprofile/:id\" component={FilmProfile} />\n          <Route path=\"/liked\" component={LikedFilm} />\n        </div>\n      </Context.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}