{"ast":null,"code":"var _jsxFileName = \"/Users/romanheviak/Desktop/GitHub/Project/react EPAM/src/Components/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useMemo, useState } from \"react\";\nimport axios from \"axios\";\nimport { auth } from '../firebase';\nimport \"../Style/HomePage.css\";\nimport Navbar from \"../Components/NavBar\";\nimport Banner from \"../Components/Banner\";\nimport requests from \"../Request\";\nimport Row from \"./Row\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [selectedSort, setSelectedSort] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [listToShow, setListToShow] = useState(\"\");\n  const genres = [\"Comedy\", \"Drama\", \"Family\", \"Horror\", \"Action\"];\n  let history = useHistory();\n\n  if (JSON.parse(sessionStorage.getItem(\"user\")) === null) {\n    history.push(\"/login\");\n  }\n\n  console.log(auth.currentUser);\n  const filteredFilms = useMemo(() => {\n    if (!movies.length) return [];\n    const filteredMovies = movies.filter(({\n      genres\n    }) => !selectedSort || genres.includes(selectedSort)).filter(({\n      name\n    }) => name.includes(search));\n\n    if (listToShow === 'rating') {\n      return filteredMovies.sort((a, b) => b.rating.average - a.rating.average);\n    } else if (listToShow === 'name') {\n      return filteredMovies.sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    return filteredMovies;\n  }, [search, selectedSort, movies, listToShow]);\n  useEffect(() => {\n    async function FetchData() {\n      const request = await axios.get(requests.fetchShow);\n      setMovies(request.data);\n      return request;\n    }\n\n    FetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homePage\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      search: search,\n      setSearch: setSearch,\n      selectedSort: selectedSort,\n      setSelectedSort: setSelectedSort,\n      listToShow: listToShow,\n      setListToShow: setListToShow,\n      sortedFilms: filteredFilms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homepage\",\n      children: selectedSort ? /*#__PURE__*/_jsxDEV(Row, {\n        title: selectedSort,\n        movies: filteredFilms.filter(({\n          genres\n        }) => genres.includes(selectedSort)),\n        isLareRow: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) : genres.map(item => /*#__PURE__*/_jsxDEV(Row, {\n        title: item,\n        movies: filteredFilms.filter(({\n          genres\n        }) => genres.includes(item))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"qrCjua6i4rUSFeHtru/Kp0tAOOg=\", false, function () {\n  return [useHistory];\n});\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/romanheviak/Desktop/GitHub/Project/react EPAM/src/Components/HomePage.js"],"names":["React","useContext","useEffect","useMemo","useState","axios","auth","Navbar","Banner","requests","Row","useHistory","HomePage","movies","setMovies","selectedSort","setSelectedSort","search","setSearch","listToShow","setListToShow","genres","history","JSON","parse","sessionStorage","getItem","push","console","log","currentUser","filteredFilms","length","filteredMovies","filter","includes","name","sort","a","b","rating","average","localeCompare","FetchData","request","get","fetchShow","data","map","item"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useMemo, useState } from \"react\";\nimport axios from \"axios\";\nimport { auth } from '../firebase';\nimport \"../Style/HomePage.css\";\nimport Navbar from \"../Components/NavBar\";\nimport Banner from \"../Components/Banner\";\nimport requests from \"../Request\";\nimport Row from \"./Row\";\nimport { useHistory } from \"react-router-dom\";\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [selectedSort, setSelectedSort] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [listToShow, setListToShow,] = useState(\"\");\n\n  const genres = [\"Comedy\", \"Drama\", \"Family\", \"Horror\", \"Action\"];\n\n  let history = useHistory();\n\n  if (JSON.parse(sessionStorage.getItem(\"user\")) === null) {\n    history.push(\"/login\");\n  }\n\n  console.log(auth.currentUser)\n\n\n  const filteredFilms = useMemo(() => {\n    if (!movies.length) return [];\n\n    const filteredMovies = movies\n      .filter(({ genres }) => !selectedSort || genres.includes(selectedSort))\n      .filter(({ name }) => name.includes(search));\n\n    if (listToShow === 'rating') {\n      return filteredMovies.sort((a, b) => b.rating.average - a.rating.average);\n    } else if (listToShow === 'name') {\n      return filteredMovies.sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    return filteredMovies;\n\n  }, [search, selectedSort, movies, listToShow]);\n\n\n  useEffect(() => {\n    async function FetchData() {\n      const request = await axios.get(requests.fetchShow);\n      setMovies(request.data);\n      return request;\n    }\n    FetchData();\n  }, []);\n\n  return (\n    <div className=\"homePage\">\n      <Navbar\n        search={search}\n        setSearch={setSearch}\n        selectedSort={selectedSort}\n        setSelectedSort={setSelectedSort}\n        listToShow ={listToShow}\n        setListToShow={setListToShow}\n        sortedFilms ={filteredFilms}\n      />\n      <Banner />\n      <div className=\"homepage\">\n        {selectedSort ? (\n          <Row\n            title={selectedSort}\n            movies={filteredFilms.filter(({ genres }) =>\n              genres.includes(selectedSort)\n            )}\n            isLareRow\n          />\n        ) : (\n          genres.map((item) => (\n            <Row\n              title={item}\n              movies={filteredFilms.filter(({ genres }) =>\n                genres.includes(item)\n              )}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}