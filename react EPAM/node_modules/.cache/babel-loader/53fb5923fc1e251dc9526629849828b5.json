{"ast":null,"code":"var _jsxFileName = \"/Users/romanheviak/Desktop/react EPAM/react-netflix/src/Components/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useMemo, useState } from \"react\";\nimport axios from \"axios\";\nimport { Context } from \"../context\";\nimport \"../Style/HomePage.css\";\nimport Navbar from \"../Components/NavBar\";\nimport Banner from \"../Components/Banner\";\nimport requests from \"../Request\";\nimport Row from \"./Row\";\nimport { useHistory } from \"react-router-dom\";\nimport SearchResult from \"./SearchResult\";\nimport Genres from \"./Genres\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [selectedSort, setSelectedSort] = useState(\"\");\n  const [search, setSearch] = useState(\"\"); // const { search, sortedByGenres } = useContext(Context);\n\n  const genres = [\"Comedy\", \"Drama\"];\n  let history = useHistory();\n\n  if (JSON.parse(sessionStorage.getItem(\"user\")) === null) {\n    history.push(\"/login\");\n  }\n\n  const filteredFilms = useMemo(() => {\n    if (!movies.length) return [];\n    return movies.filter(({\n      genres\n    }) => !selectedSort || genres.includes(selectedSort)).filter(({\n      name\n    }) => name.includes(search));\n  }, [search, selectedSort, movies]);\n  useEffect(() => {\n    async function FetchData() {\n      const request = await axios.get(requests.fetchShow);\n      setMovies(request.data);\n      console.log();\n      return request;\n    }\n\n    FetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homePage\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      search: search,\n      setSearch: setSearch,\n      selectedSort: selectedSort,\n      setSelectedSort: setSelectedSort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homepage\",\n      children: selectedSort ? /*#__PURE__*/_jsxDEV(Row, {\n        title: selectedSort,\n        movies: filteredFilms.filter(({\n          genres\n        }) => genres.includes(selectedSort)),\n        isLareRow: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this) : genres.map(item => /*#__PURE__*/_jsxDEV(Row, {\n        title: item,\n        movies: filteredFilms.filter(({\n          genres\n        }) => genres.includes(item)),\n        isLareRow: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"ut/Nvu1qeBai7mOqPnKV1uogqVA=\", false, function () {\n  return [useHistory];\n});\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/romanheviak/Desktop/react EPAM/react-netflix/src/Components/HomePage.js"],"names":["React","useContext","useEffect","useMemo","useState","axios","Context","Navbar","Banner","requests","Row","useHistory","SearchResult","Genres","HomePage","movies","setMovies","selectedSort","setSelectedSort","search","setSearch","genres","history","JSON","parse","sessionStorage","getItem","push","filteredFilms","length","filter","includes","name","FetchData","request","get","fetchShow","data","console","log","map","item"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useMemo, useState } from \"react\";\nimport axios from \"axios\";\nimport { Context } from \"../context\";\nimport \"../Style/HomePage.css\";\nimport Navbar from \"../Components/NavBar\";\nimport Banner from \"../Components/Banner\";\nimport requests from \"../Request\";\nimport Row from \"./Row\";\nimport { useHistory } from \"react-router-dom\";\nimport SearchResult from \"./SearchResult\";\nimport Genres from \"./Genres\";\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [selectedSort, setSelectedSort] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  // const { search, sortedByGenres } = useContext(Context);\n\n  const genres = [\"Comedy\", \"Drama\"];\n\n  let history = useHistory();\n\n  if (JSON.parse(sessionStorage.getItem(\"user\")) === null) {\n    history.push(\"/login\");\n  }\n\n  const filteredFilms = useMemo(() => {\n    if (!movies.length) return [];\n\n    return movies\n      .filter(({ genres }) => !selectedSort || genres.includes(selectedSort))\n      .filter(({ name }) => name.includes(search));\n  }, [search, selectedSort, movies]);\n\n  useEffect(() => {\n    async function FetchData() {\n      const request = await axios.get(requests.fetchShow);\n      setMovies(request.data);\n      console.log();\n      return request;\n    }\n    FetchData();\n  }, []);\n\n  return (\n    <div className=\"homePage\">\n      <Navbar\n        search={search}\n        setSearch={setSearch}\n        selectedSort={selectedSort}\n        setSelectedSort={setSelectedSort}\n      />\n      <Banner />\n      {/* {sortedByGenres.length ? (\n        <Genres />\n      ) : search.length ? (\n        <SearchResult />\n      ) : ( */}\n      <div className=\"homepage\">\n        {selectedSort ? (\n          <Row\n            title={selectedSort}\n            movies={filteredFilms.filter(({ genres }) =>\n              genres.includes(selectedSort)\n            )}\n            isLareRow\n          />\n        ) : (\n          genres.map((item) => (\n            <Row\n              title={item}\n              movies={filteredFilms.filter(({ genres }) =>\n                genres.includes(item)\n              )}\n              isLareRow\n            />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}