{"ast":null,"code":"var _jsxFileName = \"/Users/romanheviak/Desktop/react EPAM/react-netflix/src/Components/Row.js\";\nimport axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Context } from \"../context\";\nimport \"../Style/Row.css\";\nimport SearchResult from \"./SearchResult\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Row = ({\n  title,\n  movies,\n  isLargeRow = false\n}) => {\n  // let history = useHistory();\n  // const { setFilm, movies, setMovies,setListToShow,listToshow } = useContext(Context);\n  console.log(\"movies\", movies);\n\n  function filmItem(id) {// let item = movies.filter((film) => film.id == id.target.id);\n    // setFilm(item);\n    // history.push(`/filmprofile/${item.map((i) => i.id)}`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: movies.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rowPosters\",\n        children: movies.filter(i => i.genres.includes(title)).map(movie => {\n          var _movie$image, _movie$image2;\n\n          return !isLargeRow && (movie === null || movie === void 0 ? void 0 : (_movie$image = movie.image) === null || _movie$image === void 0 ? void 0 : _movie$image.original) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rowItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              id: movie.id,\n              onClick: filmItem,\n              className: `rowPoster ${isLargeRow && \"rowPosterLarge\"}`,\n              src: `${isLargeRow ? null : movie === null || movie === void 0 ? void 0 : (_movie$image2 = movie.image) === null || _movie$image2 === void 0 ? void 0 : _movie$image2.original}`,\n              alt: movie.name\n            }, movie.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: movie.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["/Users/romanheviak/Desktop/react EPAM/react-netflix/src/Components/Row.js"],"names":["axios","React","useContext","useEffect","useState","useHistory","Context","SearchResult","Row","title","movies","isLargeRow","console","log","filmItem","id","length","filter","i","genres","includes","map","movie","image","original","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAO,kBAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,MAAT;AAAiBC,EAAAA,UAAU,GAAG;AAA9B,CAAD,KAA2C;AACrD;AACA;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAtB;;AAEA,WAASI,QAAT,CAAkBC,EAAlB,EAAsB,CACpB;AACA;AACA;AACD;;AAED,sBACE;AAAA,cACGL,MAAM,CAACM,MAAP,iBACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAA,kBAAKP;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACGC,MAAM,CACJO,MADF,CACUC,CAAD,IAAOA,CAAC,CAACC,MAAF,CAASC,QAAT,CAAkBX,KAAlB,CADhB,EAEEY,GAFF,CAGIC,KAAD;AAAA;;AAAA,iBACE,CAACX,UAAD,KACAW,KADA,aACAA,KADA,uCACAA,KAAK,CAAEC,KADP,iDACA,aAAcC,QADd,kBAEE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,oCACE;AACE,cAAA,EAAE,EAAEF,KAAK,CAACP,EADZ;AAEE,cAAA,OAAO,EAAED,QAFX;AAGE,cAAA,SAAS,EAAG,aACVH,UAAU,IAAI,gBACf,EALH;AAOE,cAAA,GAAG,EAAG,GAAEA,UAAU,GAAG,IAAH,GAAUW,KAAV,aAAUA,KAAV,wCAAUA,KAAK,CAAEC,KAAjB,kDAAU,cAAcC,QAAS,EAPrD;AAQE,cAAA,GAAG,EAAEF,KAAK,CAACG;AARb,eAMOH,KAAK,CAACP,EANb;AAAA;AAAA;AAAA;AAAA,oBADF,eAWE;AAAA,wBAAIO,KAAK,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,oBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,SAHH;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADF;AAgCD,CA5CD;;KAAMjB,G;AA8CN,eAAeA,GAAf","sourcesContent":["import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Context } from \"../context\";\nimport \"../Style/Row.css\";\nimport SearchResult from \"./SearchResult\";\n\nconst Row = ({ title, movies, isLargeRow = false }) => {\n  // let history = useHistory();\n  // const { setFilm, movies, setMovies,setListToShow,listToshow } = useContext(Context);\n\n  console.log(\"movies\", movies);\n\n  function filmItem(id) {\n    // let item = movies.filter((film) => film.id == id.target.id);\n    // setFilm(item);\n    // history.push(`/filmprofile/${item.map((i) => i.id)}`);\n  }\n\n  return (\n    <>\n      {movies.length && (\n        <div className=\"row\">\n          <h2>{title}</h2>\n          <div className=\"rowPosters\">\n            {movies\n              .filter((i) => i.genres.includes(title))\n              .map(\n                (movie) =>\n                  !isLargeRow &&\n                  movie?.image?.original && (\n                    <div className=\"rowItem\">\n                      <img\n                        id={movie.id}\n                        onClick={filmItem}\n                        className={`rowPoster ${\n                          isLargeRow && \"rowPosterLarge\"\n                        }`}\n                        key={movie.id}\n                        src={`${isLargeRow ? null : movie?.image?.original}`}\n                        alt={movie.name}\n                      />\n                      <p>{movie.name}</p>\n                    </div>\n                  )\n              )}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Row;\n"]},"metadata":{},"sourceType":"module"}