{"ast":null,"code":"var _jsxFileName = \"/Users/romanheviak/Desktop/GitHub/Project/react EPAM/src/Components/SearchResult.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Context } from \"../context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchResult = () => {\n  _s();\n\n  const {\n    setFilm,\n    movies,\n    search\n  } = useContext(Context);\n  let history = useHistory();\n  let isLargeRow = false;\n\n  function filmItem(id) {\n    let item = movies.filter(film => film.id == id.target.id);\n    setFilm(item);\n    history.push(`/filmprofile/${item.map(i => i.id)}`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: \"white\",\n        margin: \"20px 0 0 20px\"\n      },\n      children: \"Result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rowPosters\",\n      children: movies.filter(i => i.name.includes(search)).map(movieItem => {\n        var _movieItem$image, _movieItem$image2;\n\n        return search.length > 0 && !isLargeRow && (movieItem === null || movieItem === void 0 ? void 0 : (_movieItem$image = movieItem.image) === null || _movieItem$image === void 0 ? void 0 : _movieItem$image.original) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rowItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            id: movieItem.id,\n            className: `rowPoster ${isLargeRow && \"rowPosterLarge\"}`,\n            src: `${isLargeRow ? null : movieItem === null || movieItem === void 0 ? void 0 : (_movieItem$image2 = movieItem.image) === null || _movieItem$image2 === void 0 ? void 0 : _movieItem$image2.original}`,\n            alt: movieItem.name,\n            onClick: filmItem\n          }, movieItem.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"white\"\n            },\n            children: movieItem.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchResult, \"DjgHzKkcavUlkchfyp9h9ngBPpw=\", false, function () {\n  return [useHistory];\n});\n\n_c = SearchResult;\nexport default SearchResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"sources":["/Users/romanheviak/Desktop/GitHub/Project/react EPAM/src/Components/SearchResult.js"],"names":["React","useContext","useHistory","Context","SearchResult","setFilm","movies","search","history","isLargeRow","filmItem","id","item","filter","film","target","push","map","i","color","margin","name","includes","movieItem","length","image","original"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,YAAxB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA;AAAnB,MAA8BN,UAAU,CAACE,OAAD,CAA9C;AACA,MAAIK,OAAO,GAAGN,UAAU,EAAxB;AACA,MAAIO,UAAU,GAAG,KAAjB;;AAEA,WAASC,QAAT,CAAkBC,EAAlB,EAAsB;AACpB,QAAIC,IAAI,GAAGN,MAAM,CAACO,MAAP,CAAeC,IAAD,IAAUA,IAAI,CAACH,EAAL,IAAWA,EAAE,CAACI,MAAH,CAAUJ,EAA7C,CAAX;AACAN,IAAAA,OAAO,CAACO,IAAD,CAAP;AACAJ,IAAAA,OAAO,CAACQ,IAAR,CAAc,gBAAeJ,IAAI,CAACK,GAAL,CAAUC,CAAD,IAAOA,CAAC,CAACP,EAAlB,CAAsB,EAAnD;AACD;;AAED,sBACE;AAAA,4BACE;AAAI,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,MAAM,EAAE;AAA1B,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACGd,MAAM,CACJO,MADF,CACUK,CAAD,IAAOA,CAAC,CAACG,IAAF,CAAOC,QAAP,CAAgBf,MAAhB,CADhB,EAEEU,GAFF,CAGIM,SAAD;AAAA;;AAAA,eACEhB,MAAM,CAACiB,MAAP,GAAgB,CAAhB,IACA,CAACf,UADD,KAEAc,SAFA,aAEAA,SAFA,2CAEAA,SAAS,CAAEE,KAFX,qDAEA,iBAAkBC,QAFlB,kBAGE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACE;AACE,YAAA,EAAE,EAAEH,SAAS,CAACZ,EADhB;AAEE,YAAA,SAAS,EAAG,aAAYF,UAAU,IAAI,gBAAiB,EAFzD;AAIE,YAAA,GAAG,EAAG,GAAEA,UAAU,GAAG,IAAH,GAAUc,SAAV,aAAUA,SAAV,4CAAUA,SAAS,CAAEE,KAArB,sDAAU,kBAAkBC,QAAS,EAJzD;AAKE,YAAA,GAAG,EAAEH,SAAS,CAACF,IALjB;AAME,YAAA,OAAO,EAAEX;AANX,aAGOa,SAAS,CAACZ,EAHjB;AAAA;AAAA;AAAA;AAAA,kBADF,eASE;AAAG,YAAA,KAAK,EAAE;AAAEQ,cAAAA,KAAK,EAAE;AAAT,aAAV;AAAA,sBAA+BI,SAAS,CAACF;AAAzC;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,OAHH;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAtCD;;GAAMjB,Y;UAEUF,U;;;KAFVE,Y;AAwCN,eAAeA,YAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Context } from \"../context\";\n\nconst SearchResult = () => {\n  const { setFilm, movies, search } = useContext(Context);\n  let history = useHistory();\n  let isLargeRow = false;\n\n  function filmItem(id) {\n    let item = movies.filter((film) => film.id == id.target.id);\n    setFilm(item);\n    history.push(`/filmprofile/${item.map((i) => i.id)}`);\n  }\n\n  return (\n    <div>\n      <h2 style={{ color: \"white\", margin: \"20px 0 0 20px\" }}>Result</h2>\n      <div className=\"rowPosters\">\n        {movies\n          .filter((i) => i.name.includes(search))\n          .map(\n            (movieItem) =>\n              search.length > 0 &&\n              !isLargeRow &&\n              movieItem?.image?.original && (\n                <div className=\"rowItem\">\n                  <img\n                    id={movieItem.id}\n                    className={`rowPoster ${isLargeRow && \"rowPosterLarge\"}`}\n                    key={movieItem.id}\n                    src={`${isLargeRow ? null : movieItem?.image?.original}`}\n                    alt={movieItem.name}\n                    onClick={filmItem}\n                  />\n                  <p style={{ color: \"white\" }}>{movieItem.name}</p>\n                </div>\n              )\n          )}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchResult;\n"]},"metadata":{},"sourceType":"module"}